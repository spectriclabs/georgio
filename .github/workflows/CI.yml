name: Test and Publish

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Test with tox
      run: |
        python -m tox

  version_job:
    needs: test
    outputs:
      version: ${{ steps.generate_version.outputs.version }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Generate version
      id: generate_version
      run: |
        echo "::set-output name=version::"`python scripts/generate_version.py`

  linux:
    needs: version_job
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Set version
      run: |
        cargo install set-cargo-version
        set-cargo-version Cargo.toml ${{needs.version_job.outputs.version}}
    - uses: messense/maturin-action@v1
      with:
        manylinux: auto
        command: build
        args: --release -o dist
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  windows:
    needs: version_job
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Set version
      run: |
        cargo install set-cargo-version
        set-cargo-version Cargo.toml ${{needs.version_job.outputs.version}}
    - uses: messense/maturin-action@v1
      with:
        command: build
        args: --release --no-sdist -o dist
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  macos:
    needs: version_job
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Set version
      run: |
        cargo install set-cargo-version
        set-cargo-version Cargo.toml ${{needs.version_job.outputs.version}}
    - uses: messense/maturin-action@v1
      with:
        command: build
        args: --release --no-sdist -o dist --universal2
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  publish:
    needs: [ macos, windows, linux ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
